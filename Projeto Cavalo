from PIL import Image, ImageDraw, ImageEnhance
from skimage import measure
import numpy as np

# Carregar a imagem
imagem = Image.open('cavalo.jpg')

# Converter a imagem para RGB se n√£o estiver nesse formato
imagem_rgb = imagem.convert('RGB')

# Separar os canais de cores
r, g, b = imagem_rgb.split()

# Converter cada canal em uma matriz NumPy
r_matriz = np.array(r)
g_matriz = np.array(g)
b_matriz = np.array(b)

# Encontrar os contornos em cada canal
contornos_r = measure.find_contours(r_matriz, 0.8)
contornos_g = measure.find_contours(g_matriz, 0.8)
contornos_b = measure.find_contours(b_matriz, 0.8)

# Desenhar os contornos na imagem original
desenhar = ImageDraw.Draw(imagem_rgb)

# Desenhar os contornos do canal vermelho
for contorno in contornos_r:
    for i in range(len(contorno) - 1):
        desenhar.line((contorno[i][1], contorno[i][0], contorno[i+1][1], contorno[i+1][0]), fill='red', width=2)

# Desenhar os contornos do canal verde
for contorno in contornos_g:
    for i in range(len(contorno) - 1):
        desenhar.line((contorno[i][1], contorno[i][0], contorno[i+1][1], contorno[i+1][0]), fill='green', width=2)

# Desenhar os contornos do canal azul
for contorno in contornos_b:
    for i in range(len(contorno) - 1):
        desenhar.line((contorno[i][1], contorno[i][0], contorno[i+1][1], contorno[i+1][0]), fill='blue', width=2)

# Aumentar o contraste da imagem com contornos
realcar = ImageEnhance.Contrast(imagem_rgb)
imagem_contraste = realcar.enhance(15.5)

# Salvar a imagem resultante com os contornos e realce
imagem_contraste.save('imagem_contornos_rgb.png')

# Exibir a imagem final
imagem_contraste.show()